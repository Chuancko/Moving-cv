{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;;AAEA,IAAIE,6jDAAJ;AAgDA,IAAIC,UAAU,EAAd;AACA,IAAIC,IAAI,CAAR;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACbC,eAAW,YAAM;AACb;AACA;AACA,YAAIJ,OAAOE,CAAP,MAAc,IAAlB,EAAwB;AACpBD,uBAAW,MAAX;AACH,SAFD,MAEO,IAAID,OAAOE,CAAP,MAAc,GAAlB,EAAuB;AAC1BD,uBAAW,QAAX;AACH,SAFM,MAEA;AACHA,uBAAWD,OAAOE,CAAP,CAAX;AACH;AACDN,aAAKS,SAAL,GAAiBJ,OAAjB;AACAF,cAAMM,SAAN,GAAkBL,OAAOM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AACAK,eAAOC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACAZ,aAAKY,QAAL,CAAc,CAAd,EAAiB,KAAjB;AACA,YAAIN,IAAIF,OAAOS,MAAP,GAAgB,CAAxB,EAA2B;AACvB;AACAP,iBAAK,CAAL;AACAC;AACH;AACJ,KAnBD,EAmBG,CAnBH;AAoBH,CArBD;;AAuBAA","file":"main.e343df9b.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html');\r\nlet style = document.querySelector('#style');\r\n\r\nlet string = `/* 你好，我叫小张\r\n * 接下来我想给你展示一下我的前端功底\r\n * 首先我要在这里放一个div\r\n **/\r\n#div1{\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 好单调呀\r\n * 我准备把它变成一个八卦图\r\n * 首先，然后，这个div就变成了圆\r\n **/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/* 指div为圆成功了！\r\n * 加点颜色进去\r\n **/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 颜色是对了，但是怎么是这样对称的\r\n * 不好意思，我调整调整\r\n **/\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle,rgba(255,255,255,1)0%,rgba(255,255,255,1)25%,rgba(0,0,0,1)25%,rgba(0,0,0,1)100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle,rgba(0,0,0,1)0%,rgba(0,0,0,1)25%,rgba(255,255,255,1)25%,rgba(255,255,255,1)100%,rgba(0,0,0,1)100%);\r\n}\r\n\r\n`;\r\nlet string2 = '';\r\nlet n = 0;\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        //如果不是回车，照搬\r\n        //如果是回车，往后面追加一个br\r\n        if (string[n] === \"\\n\") {\r\n            string2 += \"<br>\";\r\n        } else if (string[n] === \" \") {\r\n            string2 += \"&nbsp;\";\r\n        } else {\r\n            string2 += string[n];\r\n        }\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0, 99999);\r\n        html.scrollTo(0, 99999);\r\n        if (n < string.length - 1) {\r\n            // 如果n不是最后一个，就继续执行函数\r\n            n += 1;\r\n            step();\r\n        }\r\n    }, 0);\r\n};\r\n\r\nstep();\r\n"]}